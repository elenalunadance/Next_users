{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/elenakovenkova/Yandex.Disk.localized/%D0%A3%D1%87%D0%B5%D0%B1%D0%B0/Test_tasks/Next_users/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/elenakovenkova/Yandex.Disk.localized/%D0%A3%D1%87%D0%B5%D0%B1%D0%B0/Test_tasks/Next_users/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm flex flex-col justify-between\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0 text-wrap\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"p-6\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardContent }\n"],"names":[],"mappings":";;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0FACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAGxB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QAAa,GAAG,KAAK;;;;;;AAE1E,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACpB,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/elenakovenkova/Yandex.Disk.localized/%D0%A3%D1%87%D0%B5%D0%B1%D0%B0/Test_tasks/Next_users/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/elenakovenkova/Yandex.Disk.localized/%D0%A3%D1%87%D0%B5%D0%B1%D0%B0/Test_tasks/Next_users/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///Users/elenakovenkova/Yandex.Disk.localized/%D0%A3%D1%87%D0%B5%D0%B1%D0%B0/Test_tasks/Next_users/src/app/user/%5Bid%5D/page.tsx"],"sourcesContent":["import { Card, CardContent, CardFooter, CardHeader, CardTitle} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from 'next/link';\nimport { User } from \"@/app/page\";\nimport { Suspense } from \"react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\n\n\nexport async function getStaticParams() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    const users: User[] = await response.json();\n    return users.map((user) => ({\n        params: { id: user.id.toString() },\n    }));\n}\n\n\nexport async function CardUser({\n        params,\n    }: {\n        params: Promise<{ id: string }>\n    }) {\n        const { id } = await params;\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const user: User = await response.json();\n\n        return (\n            <div className=\"flex justify-center gap-4 m-4\">\n                \n                        <Card>\n                            <CardHeader>\n                                <CardTitle>{user.name}</CardTitle>\n                            </CardHeader>\n                            <CardContent className=\"h-30\">\n                                <p>Username: {user.username}</p>\n                                <p className=\"text-wrap\">E-mail: {user.email}</p>\n                                <p>Adress: {user.address.street}, {user.address.city}</p>\n                                <p>Phone: {user.phone}</p>\n                                <p>Website: {user.website}</p>\n                                <p>Company: {user.company.name}</p>\n                            </CardContent>\n                            <CardFooter>\n                                <Button asChild variant=\"secondary\">\n                                    <Link href={`/`}>Back to Home page</Link>\n                                </Button>\n                            </CardFooter>\n                        </Card>\n            </div>\n        );\n    }\n\n    function Loading() {\n        return (\n            <Skeleton className=\"w-[100px] h-[20px] rounded-full\" />\n            );\n        }\n        \n        export default function UserPage({ params }: { params: Promise<{ id: string }> }) {\n            return (\n            <Suspense fallback={<Loading />}>\n                <CardUser params={params} />\n            </Suspense>\n            );\n    }\n\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAEA;AACA;;;;;;;AAIO,eAAe;IAClB,MAAM,WAAW,MAAM,MAAM;IAC7B,MAAM,QAAgB,MAAM,SAAS,IAAI;IACzC,OAAO,MAAM,GAAG,CAAC,CAAC,OAAS,CAAC;YACxB,QAAQ;gBAAE,IAAI,KAAK,EAAE,CAAC,QAAQ;YAAG;QACrC,CAAC;AACL;AAGO,eAAe,SAAS,EACvB,MAAM,EAGT;IACG,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IACrB,MAAM,WAAW,MAAM,MAAM,CAAC,2CAA2C,EAAE,IAAI;IAC/E,MAAM,OAAa,MAAM,SAAS,IAAI;IAEtC,qBACI,8OAAC;QAAI,WAAU;kBAEH,cAAA,8OAAC,gIAAA,CAAA,OAAI;;8BACD,8OAAC,gIAAA,CAAA,aAAU;8BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;kCAAE,KAAK,IAAI;;;;;;;;;;;8BAEzB,8OAAC,gIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACnB,8OAAC;;gCAAE;gCAAW,KAAK,QAAQ;;;;;;;sCAC3B,8OAAC;4BAAE,WAAU;;gCAAY;gCAAS,KAAK,KAAK;;;;;;;sCAC5C,8OAAC;;gCAAE;gCAAS,KAAK,OAAO,CAAC,MAAM;gCAAC;gCAAG,KAAK,OAAO,CAAC,IAAI;;;;;;;sCACpD,8OAAC;;gCAAE;gCAAQ,KAAK,KAAK;;;;;;;sCACrB,8OAAC;;gCAAE;gCAAU,KAAK,OAAO;;;;;;;sCACzB,8OAAC;;gCAAE;gCAAU,KAAK,OAAO,CAAC,IAAI;;;;;;;;;;;;;8BAElC,8OAAC,gIAAA,CAAA,aAAU;8BACP,cAAA,8OAAC,kIAAA,CAAA,SAAM;wBAAC,OAAO;wBAAC,SAAQ;kCACpB,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAM,CAAC,CAAC,CAAC;sCAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD;AAEA,SAAS;IACL,qBACI,8OAAC,oIAAA,CAAA,WAAQ;QAAC,WAAU;;;;;;AAExB;AAEe,SAAS,SAAS,EAAE,MAAM,EAAuC;IAC5E,qBACA,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBAAU,8OAAC;;;;;kBACjB,cAAA,8OAAC;YAAS,QAAQ;;;;;;;;;;;AAG9B"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}